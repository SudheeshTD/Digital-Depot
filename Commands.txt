Hardcoded url" 

***********************************************************************************************************************************************
(1) Git:
***********************************************************************************************************************************************
git status

git add .   

git commit -m “message”

git push -u origin main  OR git push

git remote add origin [git@github.com](mailto:git@github.com):SudheeshTD/Digital-Depot.git
git remote set-url origin https://github.com/SudheeshTD/Digital-Depot.git
git branch -M main

git push -u origin main


------------------------------------------------------------------------------------------------------------------------------------------------
(2) React / FrontEnd 
------------------------------------------------------------------------------------------------------------------------------------------------
npx create-react-app frontend creating react app

npm start -  in frontend folder - starting react  

npm i react-bootstrap bootstrap react-icons - Frontend Folder
    installs three popular libraries for React projects.
    react-bootstrap: Provides Bootstrap components as React components.
    bootstrap: The core CSS framework that react-bootstrap relies on.
    react-icons: A library for popular icons in React.

npm i react-router-dom - FrontEnd Folder
    to handle routing in a React 

npm i react-router-bootstrap
     integrates react-bootstrap components with react-router

------
(4)
------
npm i axios - Frontend  // can also use Fetch API as alternative
    promise-based HTTP client for making requests to external APIs or servers from both the browser and Node.js
    converts JSON to Javascript

------
(6)
------
npm i @reduxjs/toolkit react-redux  - Frontend
    installing Redux toolkit for state management
    @reduxjs/toolkit - recommended way to write Redux logic. It provides tools that simplify common Redux tasks, making it easier to set up and manage your Redux store.
    react-redux -  set of bindings that allows you to use Redux with React. It helps connect your React components to the Redux store so that they can read state and dispatch actions.


------
(7)
------

npm i react-toastify - FrontEnd
    display Toast Messages
    


------------------------------------------------------------------------------------------------------------------------------------------------
(3) Backend / Server
------------------------------------------------------------------------------------------------------------------------------------------------

npm init   - root -  (To skip all ques enter 'npm init -y')
    To initialize a new Node.js project, This command sets up a package.json file that will hold information about your project and its dependencies

        - In this pgm - 
            About to write to D:\Studies\Git\React\Digital Depot\package.json:

            {
            "name": "digital-depot",
            "version": "1.0.0",
            "description": "eCommerce applicaton for Gadgets, its built using MERN Stack.",
            "main": "server.js",
            "scripts": {
                "test": "echo \"Error: no test specified\" && exit 1"
            },
            "author": "Sudheesh T D",
            "license": "ISC"
            }

npm start - root - 
    to start server 
    in package.json add -"Script" => "start": "node backend/server.js"

npm i express - root 
    installing express framefork for backend

npm i -D nodemon concurrently  - root
    nodemon - to eliminate the necessity of restarting server everytime i change something in code
    Concurrently - to start Backend and Frontend server concurrently
    -D - will be installed as development dependencies
    in package.json add -"Script" => "server": "nodemon backend/server.js"

npm run server - root
    - is used to run a specific script named server that is defined in the "scripts" section of your package.json file.

npm run client - root
    "Script" => "client": "npm start --prefix frontend"
    - running frontend from root folder

npm run dev - root
    "Script" =>
        "server": "nodemon backend/server.js",
        "client": "npm start --prefix frontend",
        "dev": "concurrently \"npm run server\" \"npm run client\""
    run both client and Server Concurrently


 npm i -D dotenv - root
    initialize dotenv in package.json
    for global variables

------
(7)
------
npm i jsonwebtoken  - Root 
    which you can then use to create, verify, and decode JWTs in your Node.js applications, enabling you to handle authentication and authorization securely.


npm i cookie-parser  - Root
    its a a Middleware, helps in parsing and managing HTTP cookies in Express.js applications.

------------------------------------------------------------------------------------------------------------------------------------------------
(5) Database (Mongoose)
------------------------------------------------------------------------------------------------------------------------------------------------

npm i mongoose - root
    Installing Mongoose - DB 


npm i bcryptjs  - root
    Hashing password


npm i colors - root 
    adds style and colourize console output in Nodejs app


npm run data:import - root
    script to import data from seeder
    "Script" => "data:import": "node backend/seeder.js",
    
npm run data:destroy  - root
    script to clear Data from Database
    "Script" => "data:destroy": "node backend/seeder.js -d"

